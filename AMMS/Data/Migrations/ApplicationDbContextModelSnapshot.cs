// <auto-generated />
using AMMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AMMS.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AMMS.Models.Action", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CorectiveActionId");

                    b.Property<string>("DA2408_13_2Id1");

                    b.Property<string>("RelatedMaintenanceAction")
                        .IsRequired();

                    b.Property<string>("Status")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CorectiveActionId");

                    b.HasIndex("DA2408_13_2Id1");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("AMMS.Models.ActionCorrection", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Action")
                        .IsRequired();

                    b.Property<string>("Cat")
                        .IsRequired();

                    b.Property<double>("Mmh");

                    b.Property<string>("PID")
                        .IsRequired();

                    b.Property<string>("TiPid");

                    b.HasKey("Id");

                    b.ToTable("ActionCorrections");
                });

            modelBuilder.Entity("AMMS.Models.Aircraft", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("AcftHrs");

                    b.Property<string>("AircraftModelId");

                    b.Property<string>("IdCardId");

                    b.Property<string>("SerialNumber")
                        .IsRequired();

                    b.Property<string>("StatusId");

                    b.Property<string>("UnitId");

                    b.HasKey("Id");

                    b.HasIndex("AircraftModelId");

                    b.HasIndex("IdCardId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UnitId");

                    b.ToTable("Aircraft");
                });

            modelBuilder.Entity("AMMS.Models.AircraftModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Eic");

                    b.Property<string>("Mds")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Nsn")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AircraftModels");
                });

            modelBuilder.Entity("AMMS.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<bool>("ActiveEntries");

                    b.Property<string>("AssignedUnit")
                        .IsRequired();

                    b.Property<DateTime?>("Closed");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("FullName")
                        .IsRequired();

                    b.Property<DateTime>("LastActive");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("MiddleName");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("Rank")
                        .HasMaxLength(3);

                    b.Property<string>("Salt");

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("SocialSecurityNumber")
                        .IsRequired();

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("AMMS.Models.Correction", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("AcftHrs");

                    b.Property<string>("Action")
                        .IsRequired();

                    b.Property<string>("ActionCode")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<int?>("Rounds");

                    b.Property<double?>("TiManHours");

                    b.Property<string>("TiPid");

                    b.Property<DateTime>("Time");

                    b.Property<string>("Wuc")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Corrections");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_12", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftId1");

                    b.Property<string>("AircraftSerialNumber")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Model")
                        .IsRequired();

                    b.Property<string>("Organization")
                        .IsRequired();

                    b.Property<int?>("Page");

                    b.Property<string>("Station")
                        .IsRequired();

                    b.Property<int?>("Total20MM");

                    b.Property<int?>("Total30MM");

                    b.Property<int?>("Total40MM");

                    b.Property<int?>("Total7_62");

                    b.Property<int?>("TotalAPU");

                    b.Property<double>("TotalAPUHourMeterHours");

                    b.Property<double>("TotalAPUHours");

                    b.Property<int>("TotalAPUStarts");

                    b.Property<int?>("TotalAUTO");

                    b.Property<int?>("TotalAntiIcing");

                    b.Property<int?>("TotalCycles");

                    b.Property<double>("TotalFlightHrs");

                    b.Property<int?>("TotalFuelAdded");

                    b.Property<int?>("TotalHSF");

                    b.Property<int?>("TotalHellfire2");

                    b.Property<int?>("TotalOil1");

                    b.Property<int?>("TotalOil2");

                    b.Property<int?>("TotalOxygen");

                    b.Property<int?>("TotalRocket");

                    b.Property<int?>("TotalSTD");

                    b.Property<int?>("TotalStarts1");

                    b.Property<int?>("TotalStarts2");

                    b.Property<int?>("TotalTow");

                    b.Property<int?>("ofPage");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId1");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_13", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftSerialNumber")
                        .IsRequired();

                    b.Property<string>("CrewChief");

                    b.Property<double?>("CurrentApuHours");

                    b.Property<int>("CurrentApuStarts");

                    b.Property<double>("CurrentHours");

                    b.Property<double?>("CurrentHrMeter");

                    b.Property<int?>("CurrentHsfCycles");

                    b.Property<int>("CurrentLandingsAuto");

                    b.Property<int>("CurrentLandingsStd");

                    b.Property<int?>("CurrentRounds");

                    b.Property<int?>("CurrentStarts1");

                    b.Property<int?>("CurrentStarts2");

                    b.Property<DateTime?>("Date");

                    b.Property<double?>("LastGeneration");

                    b.Property<string>("LocalUse");

                    b.Property<string>("Model")
                        .IsRequired();

                    b.Property<DateTime?>("NextPhaseDue");

                    b.Property<double?>("NextPhaseHrsRemaining");

                    b.Property<int?>("NextPhaseNo");

                    b.Property<int?>("NumPages");

                    b.Property<DateTime?>("PmdDueDate");

                    b.Property<string>("PmdPid");

                    b.Property<string>("Station")
                        .IsRequired();

                    b.Property<string>("SystemStatusAcft")
                        .HasMaxLength(14);

                    b.Property<string>("SystemStatusArm")
                        .HasMaxLength(7);

                    b.Property<string>("SystemStatusElect")
                        .HasMaxLength(7);

                    b.Property<string>("SystemStatusOther")
                        .HasMaxLength(7);

                    b.Property<double?>("TodayApuHours");

                    b.Property<int?>("TodayApuStarts");

                    b.Property<int?>("TodayCycles");

                    b.Property<double>("TodayHours");

                    b.Property<int>("TodayLandingsAuto");

                    b.Property<int>("TodayLandingsStd");

                    b.Property<int?>("TodayRounds");

                    b.Property<int?>("TodayStarts1");

                    b.Property<int?>("TodayStarts2");

                    b.Property<double?>("TotalApuHours");

                    b.Property<int?>("TotalApuStarts");

                    b.Property<double>("TotalHours");

                    b.Property<double?>("TotalHrMeter");

                    b.Property<int?>("TotalHsfCycles");

                    b.Property<int>("TotalLandingsAuto");

                    b.Property<int>("TotalLandingsStd");

                    b.Property<int?>("TotalRounds");

                    b.Property<int?>("TotalStarts1");

                    b.Property<int?>("TotalStarts2");

                    b.Property<string>("UIC")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_13_1", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftId1");

                    b.Property<string>("AircraftSerialNumber")
                        .IsRequired();

                    b.Property<DateTime?>("Date");

                    b.Property<string>("Model")
                        .IsRequired();

                    b.Property<int?>("Page");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId1");

                    b.ToTable("MaintenanceRecords");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_13_2", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Fault")
                        .IsRequired();

                    b.Property<DateTime>("FaultDate");

                    b.Property<int>("FaultNumber");

                    b.Property<int>("Page");

                    b.Property<string>("SerialNumber")
                        .IsRequired();

                    b.Property<string>("Status");

                    b.Property<string>("SystemCode")
                        .IsRequired();

                    b.Property<DateTime?>("Time");

                    b.HasKey("Id");

                    b.ToTable("RelatedMaint");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_14_1", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftId1");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId1");

                    b.ToTable("UncorrectedFaults");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_15", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftId1");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId1");

                    b.ToTable("Historicals");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_16", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftId1");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId1");

                    b.ToTable("CompHistoricals");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_16_1", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftId1");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId1");

                    b.ToTable("HistoryRecorders");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_17", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftId1");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId1");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_18", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftId1");

                    b.Property<string>("AircraftModelId");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId1");

                    b.HasIndex("AircraftModelId");

                    b.ToTable("Inspections");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_19_2", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftId1");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId1");

                    b.ToTable("EngAnalysisCks");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_19_3", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftId1");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId1");

                    b.ToTable("EngCompOpHrs");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_20", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftId1");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId1");

                    b.ToTable("OilAnalysisLogs");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_31", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftSerialNumber")
                        .IsRequired();

                    b.Property<string>("CrewChief");

                    b.Property<string>("MDS")
                        .IsRequired();

                    b.Property<string>("Supervisor");

                    b.Property<string>("Unit")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("IdCards");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_5", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftId1");

                    b.Property<string>("AircraftSerialNumber")
                        .IsRequired();

                    b.Property<DateTime?>("ApplyBy");

                    b.Property<DateTime?>("Date");

                    b.Property<DateTime>("MWODate");

                    b.Property<string>("MWONumber")
                        .IsRequired();

                    b.Property<string>("MWOTitle")
                        .IsRequired();

                    b.Property<string>("MaintenanceLevel")
                        .IsRequired();

                    b.Property<double?>("ManHours");

                    b.Property<string>("Model")
                        .IsRequired();

                    b.Property<string>("NameOrPID");

                    b.Property<string>("Nomenclature")
                        .IsRequired();

                    b.Property<string>("OrganizationApplyingMWO");

                    b.Property<int?>("Page");

                    b.Property<string>("Priority")
                        .IsRequired();

                    b.Property<int?>("ofPage");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId1");

                    b.ToTable("Modifications");
                });

            modelBuilder.Entity("AMMS.Models.DutyPosition", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DS")
                        .IsRequired();

                    b.Property<string>("FS")
                        .IsRequired();

                    b.Property<double>("HR");

                    b.Property<string>("PersonnelDataId1");

                    b.Property<string>("S");

                    b.HasKey("Id");

                    b.HasIndex("PersonnelDataId1");

                    b.ToTable("DutyPositions");
                });

            modelBuilder.Entity("AMMS.Models.EngineHitReading", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DA2408_13Id1");

                    b.Property<DateTime>("Date");

                    b.Property<string>("HIT1");

                    b.Property<string>("HIT2");

                    b.HasKey("Id");

                    b.HasIndex("DA2408_13Id1");

                    b.ToTable("EngineHitReadings");
                });

            modelBuilder.Entity("AMMS.Models.Fault", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double?>("AcHrs");

                    b.Property<string>("DA2408_13_1Id1");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Delay");

                    b.Property<string>("HowRec");

                    b.Property<string>("MalEff");

                    b.Property<int?>("No");

                    b.Property<string>("PID")
                        .IsRequired();

                    b.Property<string>("RelatedMaintenanceId");

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<string>("Sys");

                    b.Property<DateTime?>("Time");

                    b.Property<string>("WhenDisc");

                    b.Property<string>("Wuc");

                    b.Property<string>("correctionId");

                    b.HasKey("Id");

                    b.HasIndex("DA2408_13_1Id1");

                    b.HasIndex("RelatedMaintenanceId");

                    b.HasIndex("correctionId");

                    b.ToTable("Faults");
                });

            modelBuilder.Entity("AMMS.Models.FlightData", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double?>("APUHours");

                    b.Property<int?>("APUStarts");

                    b.Property<int>("AUTO");

                    b.Property<int?>("CYC");

                    b.Property<string>("Config");

                    b.Property<string>("DA2408_12Id1");

                    b.Property<int?>("External");

                    b.Property<int>("Flight");

                    b.Property<double>("FltHrs");

                    b.Property<string>("From")
                        .IsRequired();

                    b.Property<DateTime>("FromTime");

                    b.Property<string>("HIT1");

                    b.Property<string>("HIT2");

                    b.Property<int?>("HSF");

                    b.Property<int?>("Hellfire");

                    b.Property<double?>("HourMeterHrs");

                    b.Property<int?>("Internal");

                    b.Property<string>("MissionIdStd");

                    b.Property<int?>("Passengers");

                    b.Property<int?>("Rocket");

                    b.Property<int>("STD");

                    b.Property<int?>("Starts1");

                    b.Property<int?>("Starts2");

                    b.Property<string>("Stat20MM");

                    b.Property<string>("Stat30MM");

                    b.Property<string>("Stat40MM");

                    b.Property<string>("Stat7_62");

                    b.Property<string>("StatHellfire");

                    b.Property<string>("StatRocket");

                    b.Property<string>("StatTow");

                    b.Property<string>("To1");

                    b.Property<string>("To2");

                    b.Property<DateTime?>("ToTime1");

                    b.Property<DateTime>("ToTime2");

                    b.Property<int?>("Tow");

                    b.Property<int?>("_20MM");

                    b.Property<int?>("_30MM");

                    b.Property<int?>("_40MM");

                    b.Property<int?>("_7_62");

                    b.HasKey("Id");

                    b.HasIndex("DA2408_12Id1");

                    b.ToTable("FlightData");
                });

            modelBuilder.Entity("AMMS.Models.IndividualSignOff", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cat")
                        .IsRequired();

                    b.Property<string>("CorrectionId1");

                    b.Property<double>("Hrs");

                    b.Property<string>("PID")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CorrectionId1");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("AMMS.Models.PersonnelData", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FlightDataId1");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PID")
                        .IsRequired();

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.HasIndex("FlightDataId1");

                    b.ToTable("PersonnelData");
                });

            modelBuilder.Entity("AMMS.Models.Request", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber");

                    b.Property<DateTime>("Requested");

                    b.Property<string>("Unit")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("AMMS.Models.ServicingData", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AntiIcing");

                    b.Property<string>("DA2408_12Id1");

                    b.Property<int?>("FuelAdded");

                    b.Property<string>("Grade")
                        .HasMaxLength(3);

                    b.Property<string>("Grade1")
                        .HasMaxLength(5);

                    b.Property<string>("Grade2")
                        .HasMaxLength(5);

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<int?>("Oil1");

                    b.Property<int?>("Oil2");

                    b.Property<int?>("Oxygen");

                    b.Property<string>("ServicedBy")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DA2408_12Id1");

                    b.ToTable("ServicingData");
                });

            modelBuilder.Entity("AMMS.Models.Unit", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompanyName")
                        .IsRequired();

                    b.Property<string>("Station");

                    b.Property<string>("UIC")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("UnitName")
                        .IsRequired();

                    b.Property<string>("UnitPhone");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("AMMS.Models.Action", b =>
                {
                    b.HasOne("AMMS.Models.ActionCorrection", "CorectiveAction")
                        .WithMany()
                        .HasForeignKey("CorectiveActionId");

                    b.HasOne("AMMS.Models.DA2408_13_2")
                        .WithMany("Actions")
                        .HasForeignKey("DA2408_13_2Id1");
                });

            modelBuilder.Entity("AMMS.Models.Aircraft", b =>
                {
                    b.HasOne("AMMS.Models.AircraftModel", "AircraftModel")
                        .WithMany("AllThisModelAircraft")
                        .HasForeignKey("AircraftModelId");

                    b.HasOne("AMMS.Models.DA2408_31", "IdCard")
                        .WithMany()
                        .HasForeignKey("IdCardId");

                    b.HasOne("AMMS.Models.DA2408_13", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("AMMS.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_12", b =>
                {
                    b.HasOne("AMMS.Models.Aircraft")
                        .WithMany("Flights")
                        .HasForeignKey("AircraftId1");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_13_1", b =>
                {
                    b.HasOne("AMMS.Models.Aircraft")
                        .WithMany("Faults")
                        .HasForeignKey("AircraftId1");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_14_1", b =>
                {
                    b.HasOne("AMMS.Models.Aircraft")
                        .WithMany("UncorrectedFaults")
                        .HasForeignKey("AircraftId1");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_15", b =>
                {
                    b.HasOne("AMMS.Models.Aircraft")
                        .WithMany("Historicals")
                        .HasForeignKey("AircraftId1");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_16", b =>
                {
                    b.HasOne("AMMS.Models.Aircraft")
                        .WithMany("ComponentHistoricals")
                        .HasForeignKey("AircraftId1");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_16_1", b =>
                {
                    b.HasOne("AMMS.Models.Aircraft")
                        .WithMany("HistoryRecorders")
                        .HasForeignKey("AircraftId1");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_17", b =>
                {
                    b.HasOne("AMMS.Models.Aircraft")
                        .WithMany("Inventory")
                        .HasForeignKey("AircraftId1");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_18", b =>
                {
                    b.HasOne("AMMS.Models.Aircraft")
                        .WithMany("Inspections")
                        .HasForeignKey("AircraftId1");

                    b.HasOne("AMMS.Models.AircraftModel")
                        .WithMany("MasterInspectionList")
                        .HasForeignKey("AircraftModelId");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_19_2", b =>
                {
                    b.HasOne("AMMS.Models.Aircraft")
                        .WithMany("EngineAnalysisChecks")
                        .HasForeignKey("AircraftId1");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_19_3", b =>
                {
                    b.HasOne("AMMS.Models.Aircraft")
                        .WithMany("EngineComponentOpHrs")
                        .HasForeignKey("AircraftId1");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_20", b =>
                {
                    b.HasOne("AMMS.Models.Aircraft")
                        .WithMany("OilAnalysisLogs")
                        .HasForeignKey("AircraftId1");
                });

            modelBuilder.Entity("AMMS.Models.DA2408_5", b =>
                {
                    b.HasOne("AMMS.Models.Aircraft")
                        .WithMany("Modifications")
                        .HasForeignKey("AircraftId1");
                });

            modelBuilder.Entity("AMMS.Models.DutyPosition", b =>
                {
                    b.HasOne("AMMS.Models.PersonnelData")
                        .WithMany("DutyPositions")
                        .HasForeignKey("PersonnelDataId1");
                });

            modelBuilder.Entity("AMMS.Models.EngineHitReading", b =>
                {
                    b.HasOne("AMMS.Models.DA2408_13")
                        .WithMany("HitReadings")
                        .HasForeignKey("DA2408_13Id1");
                });

            modelBuilder.Entity("AMMS.Models.Fault", b =>
                {
                    b.HasOne("AMMS.Models.DA2408_13_1")
                        .WithMany("Faults")
                        .HasForeignKey("DA2408_13_1Id1");

                    b.HasOne("AMMS.Models.DA2408_13_2", "RelatedMaintenance")
                        .WithMany()
                        .HasForeignKey("RelatedMaintenanceId");

                    b.HasOne("AMMS.Models.Correction", "correction")
                        .WithMany()
                        .HasForeignKey("correctionId");
                });

            modelBuilder.Entity("AMMS.Models.FlightData", b =>
                {
                    b.HasOne("AMMS.Models.DA2408_12")
                        .WithMany("FlightData")
                        .HasForeignKey("DA2408_12Id1");
                });

            modelBuilder.Entity("AMMS.Models.IndividualSignOff", b =>
                {
                    b.HasOne("AMMS.Models.Correction")
                        .WithMany("Individuals")
                        .HasForeignKey("CorrectionId1");
                });

            modelBuilder.Entity("AMMS.Models.PersonnelData", b =>
                {
                    b.HasOne("AMMS.Models.FlightData")
                        .WithMany("PersonnelData")
                        .HasForeignKey("FlightDataId1");
                });

            modelBuilder.Entity("AMMS.Models.ServicingData", b =>
                {
                    b.HasOne("AMMS.Models.DA2408_12")
                        .WithMany("ServicingData")
                        .HasForeignKey("DA2408_12Id1");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AMMS.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AMMS.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AMMS.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AMMS.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
