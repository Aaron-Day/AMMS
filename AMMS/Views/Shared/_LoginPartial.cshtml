@using Microsoft.AspNetCore.Identity
@using AMMS.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            @if (User.IsInRole("Admin"))
            {
                <li>
                    <a asp-area="" asp-controller="Unit" asp-action="List">Units</a>
                </li>
                <li>
                    <a asp-area="" asp-controller="AircraftModel" asp-action="List">Aircraft Models</a>
                </li>
                <li>
                    <a asp-area="" asp-controller="Account" asp-action="Requests">Access Requests</a>
                </li>
            }
            @if (User.IsInRole("CE"))
            {
                <li>
                    <a asp-area="" asp-controller="Aircraft" asp-action="List" asp-route-parentId="@UserManager.GetUserId(User)">Logbooks</a>
                </li>
            }
            <li>
                <a asp-area="" asp-controller="Home" asp-action="Index" title="Manage">Hello @UserManager.FindByIdAsync(UserManager.GetUserId(User)).Result.FullName</a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Log out</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="" asp-controller="Account" asp-action="RequestAccount">Request Account</a></li>
        <li><a asp-area="" asp-controller="Account" asp-action="Login">Login</a></li>
    </ul>
}
